{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","e","preventDefault","className","s","form","label","id","uuidv4","type","pattern","title","required","onChange","input","btn","Filter","filter","changeFilter","ContactListItem","onDelete","onClick","ContactList","contacts","list","map","item","App","setFilter","JSON","parse","window","localStorage","getItem","setContacts","normalizeFilter","toLowerCase","visibleContacts","el","includes","useEffect","setItem","stringify","checkNewName","find","data","alert","newContact","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31536aaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__36Bot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1Onuy\",\"form\":\"ContactForm_form__3s23f\",\"input\":\"ContactForm_input__2E08-\",\"btn\":\"ContactForm_btn__14GP6\"};","import { useState } from \"react\";\r\n// import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  const handleChange = (event) => {\r\n    switch (event.currentTarget.name) {\r\n      case \"name\":\r\n        setName(event.currentTarget.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(event.currentTarget.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n// class OldContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   static propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//   };\r\n//   handleChange = (event) => {\r\n//     this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n//   };\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(this.state);\r\n//     this.reset();\r\n//   };\r\n//   render() {\r\n//     // const idName = uuidv4();\r\n//     // const idNumber = uuidv4();\r\n//     return (\r\n//       <>\r\n//         <form onSubmit={this.handleSubmit} className={s.form}>\r\n//           <label className={s.label}>\r\n//             Name\r\n//             <input\r\n//               id={uuidv4()}\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//               required\r\n//               value={this.state.name}\r\n//               onChange={this.handleChange}\r\n//               className={s.input}\r\n//             />\r\n//           </label>\r\n//           <label className={s.label}>\r\n//             Number\r\n//             <input\r\n//               id={uuidv4()}\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//               value={this.state.number}\r\n//               onChange={this.handleChange}\r\n//               className={s.input}\r\n//             />\r\n//           </label>\r\n//           <button type=\"submit\" className={s.btn}>\r\n//             Add contact\r\n//           </button>\r\n//         </form>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n        className={s.input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => onDelete(id)} className={s.btn}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"../ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              onDelete={onDelete}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nfunction App() {\n  const [filter, setFilter] = useState(\"\");\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  );\n\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter((el) =>\n    el.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitData = (data) => {\n    if (checkNewName(data.name)) {\n      alert(`${data.name} is already in contact!`);\n      return;\n    }\n    const newContact = { ...data, id: uuidv4() };\n    setContacts((prevContacts) => [...prevContacts, newContact]);\n  };\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n  const checkNewName = (name) => {\n    return contacts.find((el) => el.name === name);\n  };\n  const deleteContact = (id) => {\n    setContacts((prevContacts) => prevContacts.filter((el) => el.id !== id));\n  };\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitData} />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} changeFilter={changeFilter} />\n      <ContactList contacts={visibleContacts} onDelete={deleteContact} />\n    </div>\n  );\n}\n\n// class OldApp extends Component {\n//   state = {\n//     contacts: [],\n//     // contacts: [\n//     //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     // ],\n//     filter: \"\",\n//   };\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   formSubmitData = (data) => {\n//     if (this.checkNewName(data.name)) {\n//       alert(`${data.name} is already in contact!`);\n//       return;\n//     }\n//     const newContact = { ...data, id: uuidv4() };\n//     this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n//   };\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n//   checkNewName = (name) => {\n//     return this.state.contacts.find((el) => el.name === name);\n//   };\n//   deleteContact = (id) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter((el) => el.id !== id),\n//     }));\n//   };\n\n//   render() {\n//     const normalizeFilter = this.state.filter.toLowerCase();\n//     const visibleContacts = this.state.contacts.filter((el) =>\n//       el.name.toLowerCase().includes(normalizeFilter)\n//     );\n//     return (\n//       <div>\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={this.formSubmitData} />\n\n//         <h2>Contacts</h2>\n//         <Filter filter={this.state.filter} changeFilter={this.changeFilter} />\n//         <ContactList\n//           contacts={visibleContacts}\n//           filter={this.state.filter}\n//           onDelete={this.deleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3_D4u\",\"label\":\"Filter_label__2Ze5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3AjiT\",\"item\":\"ContactList_item__1z7ot\"};"],"sourceRoot":""}